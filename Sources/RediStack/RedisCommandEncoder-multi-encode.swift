//===----------------------------------------------------------------------===//
//
// This source file is part of the RediStack open source project
//
// Copyright (c) 2023 RediStack project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of RediStack project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//
//
// NOTE: THIS FILE IS AUTO-GENERATED BY scripts/generate_rediscommandencoder_multi_encode.sh

#if swift(<5.9)
extension RedisCommandEncoder {
    @inlinable
    mutating func encodeRESPArray<T0: RESP3BlobStringEncodable>(_ t0: T0) {
        self.buffer.writeBytes("*1\r\n".utf8)
        t0.encodeRedisBlobString(into: &self.buffer)
    }

    @inlinable
    mutating func encodeRESPArray<T0: RESP3BlobStringEncodable, T1: RESP3BlobStringEncodable>(_ t0: T0, _ t1: T1) {
        self.buffer.writeBytes("*2\r\n".utf8)
        t0.encodeRedisBlobString(into: &self.buffer)
        t1.encodeRedisBlobString(into: &self.buffer)
    }

    @inlinable
    mutating func encodeRESPArray<
        T0: RESP3BlobStringEncodable,
        T1: RESP3BlobStringEncodable,
        T2: RESP3BlobStringEncodable
    >(_ t0: T0, _ t1: T1, _ t2: T2) {
        self.buffer.writeBytes("*3\r\n".utf8)
        t0.encodeRedisBlobString(into: &self.buffer)
        t1.encodeRedisBlobString(into: &self.buffer)
        t2.encodeRedisBlobString(into: &self.buffer)
    }

    @inlinable
    mutating func encodeRESPArray<
        T0: RESP3BlobStringEncodable,
        T1: RESP3BlobStringEncodable,
        T2: RESP3BlobStringEncodable,
        T3: RESP3BlobStringEncodable
    >(_ t0: T0, _ t1: T1, _ t2: T2, _ t3: T3) {
        self.buffer.writeBytes("*4\r\n".utf8)
        t0.encodeRedisBlobString(into: &self.buffer)
        t1.encodeRedisBlobString(into: &self.buffer)
        t2.encodeRedisBlobString(into: &self.buffer)
        t3.encodeRedisBlobString(into: &self.buffer)
    }

    @inlinable
    mutating func encodeRESPArray<
        T0: RESP3BlobStringEncodable,
        T1: RESP3BlobStringEncodable,
        T2: RESP3BlobStringEncodable,
        T3: RESP3BlobStringEncodable,
        T4: RESP3BlobStringEncodable
    >(_ t0: T0, _ t1: T1, _ t2: T2, _ t3: T3, _ t4: T4) {
        self.buffer.writeBytes("*5\r\n".utf8)
        t0.encodeRedisBlobString(into: &self.buffer)
        t1.encodeRedisBlobString(into: &self.buffer)
        t2.encodeRedisBlobString(into: &self.buffer)
        t3.encodeRedisBlobString(into: &self.buffer)
        t4.encodeRedisBlobString(into: &self.buffer)
    }

    @inlinable
    mutating func encodeRESPArray<
        T0: RESP3BlobStringEncodable,
        T1: RESP3BlobStringEncodable,
        T2: RESP3BlobStringEncodable,
        T3: RESP3BlobStringEncodable,
        T4: RESP3BlobStringEncodable,
        T5: RESP3BlobStringEncodable
    >(_ t0: T0, _ t1: T1, _ t2: T2, _ t3: T3, _ t4: T4, _ t5: T5) {
        self.buffer.writeBytes("*6\r\n".utf8)
        t0.encodeRedisBlobString(into: &self.buffer)
        t1.encodeRedisBlobString(into: &self.buffer)
        t2.encodeRedisBlobString(into: &self.buffer)
        t3.encodeRedisBlobString(into: &self.buffer)
        t4.encodeRedisBlobString(into: &self.buffer)
        t5.encodeRedisBlobString(into: &self.buffer)
    }

    @inlinable
    mutating func encodeRESPArray<
        T0: RESP3BlobStringEncodable,
        T1: RESP3BlobStringEncodable,
        T2: RESP3BlobStringEncodable,
        T3: RESP3BlobStringEncodable,
        T4: RESP3BlobStringEncodable,
        T5: RESP3BlobStringEncodable,
        T6: RESP3BlobStringEncodable
    >(_ t0: T0, _ t1: T1, _ t2: T2, _ t3: T3, _ t4: T4, _ t5: T5, _ t6: T6) {
        self.buffer.writeBytes("*7\r\n".utf8)
        t0.encodeRedisBlobString(into: &self.buffer)
        t1.encodeRedisBlobString(into: &self.buffer)
        t2.encodeRedisBlobString(into: &self.buffer)
        t3.encodeRedisBlobString(into: &self.buffer)
        t4.encodeRedisBlobString(into: &self.buffer)
        t5.encodeRedisBlobString(into: &self.buffer)
        t6.encodeRedisBlobString(into: &self.buffer)
    }
}
#endif
